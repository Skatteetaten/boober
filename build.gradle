buildscript {
  ext.kotlin_version = "1.2.51"
  ext.springBootVersion = "1.5.12.RELEASE"
  ext.auroraStartersVersion = "3.7.0"

  repositories {
    mavenCentral()
    jcenter()
    mavenLocal()

    maven {
      url "https://repo.spring.io/libs-milestone"
    }
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath(
        "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version",
        "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version",
        "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version",
        "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion",
        "no.skatteetaten.aurora.gradle.plugins:aurora-gradle-plugin:1.2.1",
        "org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.0.RELEASE",
        "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:4.0.0"
    )
  }
}

repositories {
  mavenCentral()
  jcenter()
  mavenLocal()

  maven {
    url "https://repo.spring.io/libs-milestone"
  }
}

ext.aurora = [
    requireStaging: false
]
apply plugin: "no.skatteetaten.plugins.aurora"
apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: "spring-cloud-contract"
apply plugin: "org.jlleitschuh.gradle.ktlint"

group = "no.skatteetaten.aurora"

ext["logback.version"] = "1.2.3"


dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:2.0.0.RELEASE"
  }
}

dependencies {
  compile(
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
      "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
      "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5",
      "no.skatteetaten.aurora.springboot:aurora-spring-boot-starter:$auroraStartersVersion",
      "org.springframework.boot:spring-boot-starter-cache",
      "org.springframework.boot:spring-boot-starter-aop",
      "org.springframework.boot:spring-boot-starter-security",
      "org.springframework.retry:spring-retry",
      "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.5",
      "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",
      "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
      "org.springframework.boot:spring-boot-starter-cache",
      "org.springframework.boot:spring-boot-starter-aop",
      "org.springframework.boot:spring-boot-starter-security",
      "org.springframework.retry:spring-retry",
      "org.eclipse.jgit:org.eclipse.jgit:4.11.0.201803080745-r",
      "com.github.fge:json-patch:1.9",
      "org.encryptor4j:encryptor4j:0.1.2",
      "com.github.ben-manes.caffeine:caffeine",
      "com.fkorotkov:kubernetes-dsl:1.0.1",
      "org.apache.commons:commons-text:1.3"
  )

  testCompile(
      'org.codehaus.groovy:groovy-all:2.4.15',
      "org.springframework.boot:spring-boot-starter-test",
      "org.spockframework:spock-core:1.1-groovy-2.4",
      "org.spockframework:spock-spring:1.1-groovy-2.4",
      "org.springframework.restdocs:spring-restdocs-mockmvc",
      "cglib:cglib-nodep:3.1",
      "org.objenesis:objenesis:2.1",
      "org.springframework.security:spring-security-test"
  )
  testCompile("org.springframework.cloud:spring-cloud-starter-contract-verifier") {
    exclude group: "org.codehaus.groovy"
  }
}

kotlin {
  experimental {
    coroutines "enable"
  }
}
compileKotlin {
  kotlinOptions {
    suppressWarnings = true
    jvmTarget = 1.8
  }
}

test{
  maxHeapSize = "512m"
}

compileTestGroovy.dependsOn compileTestKotlin
compileTestGroovy.classpath += files(compileTestKotlin.destinationDir)
testClasses.dependsOn compileTestGroovy

task wrapper(type: Wrapper) {
  gradleVersion = "4.7"
}

contracts {
  packageWithBaseClasses = "no.skatteetaten.aurora.boober.contracts"
  targetFramework = "Spock"
}

ktlint {
  version = "0.23.1"
}
