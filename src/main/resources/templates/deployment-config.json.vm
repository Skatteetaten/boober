{
  "kind": "DeploymentConfig",
  "apiVersion": "v1",
  "metadata": {
  "annotations": {
    #foreach ($annotation  in $annotations.entrySet())
      #if($velocityCount != 1)
        ,
      #end
      "${annotation.key}": "${annotation.value}"
    #end
  },
"labels": {
  #foreach ($label  in $labels.entrySet())
    #if($velocityCount != 1)
      ,
    #end
    "${label.key}": "${label.value}"
  #end
},
"name": "${name}"
},
"spec": {
  #if(${deploy.deployStrategy.type} == "rolling")
  "strategy": {
  "type": "Rolling",
  "rollingParams": {
  "intervalSeconds": 1,
  "maxSurge": "25%",
  "maxUnavailable": 0,
  "timeoutSeconds": ${deploy.deployStrategy.timeout},
  "updatePeriodSeconds": 1
  }
  },
  #else
  "strategy": {
  "type": "Recreate",
  "recreateParams": {
  "timeoutSeconds": ${deploy.deployStrategy.timeout}
  }
  },
  #end
"triggers": [
{
"type": "ImageChange",
"imageChangeParams": {
"automatic": true,
"containerNames": [
    #foreach ($container  in $containers.entrySet())
        #if($velocityCount != 1)
        ,
        #end
    "${container.key}"
    #end
],
"from": {
"name": "${name}:${imageStreamTag}",
"kind": "ImageStreamTag"
}
}
}
],
"replicas": ${deploy.replicas} ,
"selector": {
"name": "${name}"
},
"template": {
"metadata": {
"labels": {
  #foreach ($label  in $labels.entrySet())
    #if($velocityCount != 1)
    ,
    #end
  "${label.key}": "${label.value}"
  #end
}
},
"spec": {
"volumes": [
  #if (${mounts})
    #foreach ($mount in $mounts)
    {
    "name": "${mount.mountName}",
      #if(${mount.type} == "ConfigMap")
      "configMap": {
      "name": "${mount.volumeName}"
      }
      #elseif(${mount.type} == "Secret")
      "secret": {
      "secretName": "${mount.volumeName}"
      }
      #elseif(${mount.type} == "PVC")
      "persistentVolumeClaim": {
      "claimName": "${mount.volumeName}"
      }
      #end
    },
    #end
  #end
{
"name": "application-log-volume",
"emptyDir": {
}
}
],
"containers": [
    #foreach ($container in $containers.entrySet())
        #if($velocityCount != 1)
        ,
    #end
        ${container.value}
  #end
],
"restartPolicy": "Always",
"dnsPolicy": "ClusterFirst"
#if(${deploy.serviceAccount})
,
"serviceAccountName": "${deploy.serviceAccount}"
#end
}
}
}
}
