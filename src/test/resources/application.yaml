spring:
    main:
        banner-mode: "off"
    application:
        name: boober

aurora:
    token:
        value: token

splunk:
    hec:
        token: token
        url: "splunk.hec"
        port: 8080
    fluentbit:
        retry:
            limit: 5
        tag: "1.6.10"

integrations:
    operations:
        scope: "aos-4016"
    bitbucket:
        username: "foo"
        password: "bar"
        url: "http://localhost:${integrations.bitbucket.port}"
        port: 8086
    bigbird:
        url: "https://bigbird-utv.org"
    deployLog:
        git:
            project: "ao"
            repo: "auroradeploymenttags"
    s3:
        variant: minio
    aurora:
        templates:
            project: "ao"
            repo: "auroratemplates"
            ref: "master"
        config:
            git:
                project: "ac"
                repoPath: "build/gitrepos_auroraconfig_bare"
                urlPattern: "${integrations.aurora.config.git.repoPath}/%s"
                checkoutPath: "build/auroraconconfigs"
        vault:
            git:
                repoPath: "build/gitrepos_vault_bare"
                urlPattern: "${integrations.aurora.vault.git.repoPath}/%s"
                checkoutPath: "build/vaultcheckout"
    openshift:
        url: "http://localhost:${integrations.openshift.port}"
        port: 8083
        retries: 3
        backoff: 100
    dbh:
        url: "http://localhost:${integrations.dbh.port}"
        port: 8084
    skap:
        url: "http://localhost:${integrations.skap.port}"
        port: 8082
    cantus:
        url: "http://localhost:${integrations.cantus.port}"
        port: 8085
        token: "token"
    fiona:
        url: "http://localhost:${integrations.fiona.port}"
        port: 8088
    herkimer:
        url: "http://localhost:${integrations.herkimer.port}"
        port: 8087
    mattermost:
        url: "http://localhost:${integrations.mattermost.port}"
        port: 8091
        token: "test-token"
    docker:
        registry: "docker.registry:5000"
        releases: "docker.release.registry:5000"


application:
    deployment:
        id: 1234567890

boober:
    projectrequest:
        sleep: 0
    encrypt:
        key: "komogsyngensang"
        token: "test"
    openshift:
        tokenLocation: /tmp/boober-token
    route:
        suffix: ".test"
    azureRoute:
        suffix: ".test.azure"
    webseal:
        suffix: ".test.webseal"
    productionlevel: "u"

auroraconfig:
    builder:
        version: "1"

vault:
    operations:
        enabled: true
    git:
        urlPattern: "file:///tmp/vaulttest/%s"
        checkoutPath: "build/vaultcheckout"
        username: "foo"
        password: "bar"

management:
    server.port: 0

openshift:
    cluster: utv
